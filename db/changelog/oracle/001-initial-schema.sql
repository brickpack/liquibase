--liquibase formatted sql

--changeset oracle-team:001-create-legacy-customers-table
--comment: Create legacy customers table for Oracle integration
CREATE TABLE legacy_customers (
    customer_id NUMBER(10) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    customer_code VARCHAR2(20) UNIQUE NOT NULL,
    company_name VARCHAR2(255) NOT NULL,
    contact_person VARCHAR2(255),
    phone VARCHAR2(20),
    email VARCHAR2(320),
    address CLOB,
    credit_limit NUMBER(12,2) DEFAULT 0,
    status VARCHAR2(20) DEFAULT 'ACTIVE',
    created_date DATE DEFAULT SYSDATE,
    modified_date DATE DEFAULT SYSDATE,
    CONSTRAINT chk_status CHECK (status IN ('ACTIVE', 'INACTIVE', 'SUSPENDED'))
);

--changeset oracle-team:001-create-legacy-transactions-table
--comment: Create legacy transactions table
CREATE TABLE legacy_transactions (
    transaction_id NUMBER(15) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    customer_id NUMBER(10) NOT NULL,
    transaction_type VARCHAR2(20) NOT NULL,
    amount NUMBER(15,2) NOT NULL,
    currency_code VARCHAR2(3) DEFAULT 'USD',
    transaction_date DATE DEFAULT SYSDATE,
    reference_number VARCHAR2(50),
    description VARCHAR2(500),
    status VARCHAR2(20) DEFAULT 'PENDING',
    processed_date DATE,
    CONSTRAINT fk_transactions_customer FOREIGN KEY (customer_id) REFERENCES legacy_customers(customer_id),
    CONSTRAINT chk_transaction_type CHECK (transaction_type IN ('DEBIT', 'CREDIT', 'TRANSFER', 'FEE')),
    CONSTRAINT chk_transaction_status CHECK (status IN ('PENDING', 'COMPLETED', 'FAILED', 'CANCELLED'))
);

--changeset oracle-team:001-create-sequences-and-triggers
--comment: Create additional Oracle-specific objects
CREATE SEQUENCE seq_batch_id START WITH 1000 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER trg_customers_modified_date
    BEFORE UPDATE ON legacy_customers
    FOR EACH ROW
BEGIN
    :NEW.modified_date := SYSDATE;
END;